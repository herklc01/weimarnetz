#!/bin/sh
. /tmp/loader

# FIXME! remove this file, it _was_ called from S51cron with 'lazy' and 'minimal'

[ -e "/tmp/LOCKFILE_APPLY" ] && {
	_log it apply_profile daemon info "[OK] no scheduler action"
	exit 0
}

ERR=1
while getopts "S:a:A:rlpfOPHU" FLAG; do {
	ERR=0

	case "$FLAG" in
		S)
			# MINUTE = 00...59
			# HOUR   = 00...23
			eval $( date '+MINUTE=%M; HOUR=%H; WEEKDAY=%A; DAYOFMONTH=%e;' )

			echo >>$SCHEDULER '_watch monitoring'
			echo >>$SCHEDULER '_watch coredump "during: cron.minutely"'
			echo >>$SCHEDULER '_wifi watch_phy_problems'

			case "$OPTARG" in
				minimal)
					case "$MINUTE" in
						00|15|30|45)
							echo >>$SCHEDULER '/etc/init.d/S69watch_olsrd_fff+'

							case "$MINUTE" in
								00)
									case "$HOUR" in
										04)
											echo >>$SCHEDULER '_firmware update_pmu'
										;;
									esac
								;;
							esac

							echo >>$SCHEDULER '_watch hanging_command usual_suspects'
						;;
					esac
				;;
				lazy)
					_watch autorun
				;;
				newstyle)
					# only compat-layer
					. /usr/sbin/cron.taskplanner.default
				;;
			esac
		;;
		a)
			echo >>$SCHEDULER "$OPTARG"
		;;
		r)
			[ -e "$TMPDIR/SEND_ALIVE_FAILED" ] && {				# fixme! this is a hack
				echo >>$SCHEDULER_IMPORTANT '/etc/init.d/S69watch_olsrd_fff+'
			}
		;;
		l)
			_scheduler queue_list
		;;
		P)
			case "$( uci -q get network.@gatewaycheck[0].mode )" in
				ping|1)
					SERVER_IP="8.8.8.8"
					LOSS="$( ping -q -c 1 $SERVER_IP | sed -n 's/^.* received, \([0-9]*\)%.*/\1/p' )"
					[ "${LOSS:-222}" -gt 0 ] && _log it pingtest daemon info "[ERR] packetloss is ${LOSS}% to IP $SERVER_IP"
				;;
			esac
		;;
		p)
			_scheduler queue_purge
		;;
		*)
			ERR=1
		;;
	esac
} done

if [ "$ERR" = "1" ]; then
	_scheduler print_usage && exit 1
else
	true
fi
