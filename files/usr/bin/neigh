#!/bin/sh
. /tmp/loader

print_help()
{
	cat <<EOF
Usage: $0 gateways | evalable | best_wifi_nlq | get_nlq [neigh_ip]
          check4nonwifi | check4wifi | check4good_non_tunnel_neigh
          get_cost2node [node] | plain | <empty>
EOF
}

ACTION="$1"
OPTION="$2"

case "$ACTION" in
	gateways)
		_olsr gateways_get
	;;
	evalable)
		_olsr neighs_extended_evalable verbose
	;;
	best_wifi_nlq)
		# output like '500' which is 0.500 - output can be <empty>!
		_olsr neigh_nlq_best_wifi
	;;
	get_nlq)
		[ -n "$OPTION" ] && {
			_olsr neigh_nlq "$OPTION"
		}
	;;
	check4nonwifi)
		_olsr neigh_check_for_nonwifi
	;;
	check4wifi)
		_olsr neigh_check_for_wifi
	;;
	check4good_non_tunnel_neigh)
		_olsr neigh_check_for_good_non_tunnel || exit 1
	;;
	get_random)
		# returns IP or EMPTY (!)
		_olsr neigh_random_get
	;;
	get_random_pair)
		# FIXME! max_cost not yet implemented
		_olsr neigh_random_pair_from_mesh_evalable "$OPTION"
	;;
	get_cost2node)
		_olsr node_evalable "$OPTION"
	;;
	plain)
		cat /tmp/OLSR/ALL
	;;
	help)
		print_help
	;;
	*)
		if [ -z "$ACTION" ]; then
			# FIXME! +gps +distance +olsrd/ff/fff-version?
			_olsr neighs_humanreadable
		else
			[ "$ACTION" = '.' ] && ACTION='127.0.0.1'

			# e.g. 356
			if   isnumber "$ACTION"; then
				ACTION="$( _ipsystem getvar WIFIADR "$ACTION" )"
				ACTION="$( _sanitizer run "$ACTION" ip4 )"
			# e.g. 10.63.127.1
			elif _sanitizer run "$ACTION" ip4 check; then
				_curl it "http://$ACTION/cgi-bin-tool.sh?OPT=neigh"
			# e.g. badeofen-AP.olsr
			elif [ -n "$( _net dns2ip "$ACTION" )" ]; then
				_curl it "http://$ACTION/cgi-bin-tool.sh?OPT=neigh"
			fi
		fi
	;;
esac
