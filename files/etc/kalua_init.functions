#!/bin/sh

kalua_max_args()
{
	# TODO: use '$@'?
	echo '"$1" "$2" "$3" "$4" "$5" "$6" "$7" "$8" "$9" "${10}" "${11}" "${12}" "${13}" "${14}" "${15}"'
}

_kalua_strip_script()			# fixme! no substitution within 'cat <<EOF bla bla EOF' ?
{					# fixme! no substitution within 'echo "bla # blubb"
	local file="$1"
	local class="${2:-is_unset}"
	local debug="$3"

	[ "$class" = 'help' ] && {
		cat "$file"
		return 0
	}

	[ -z "$debug" ] && {
		sed	-e '/^#/d' \
			-e 's/; do {/\ndo/' \
			-e 's/[ 	]*} done/done/' \
			-e 's/]; then\(.*\)/]\nthen\1/' \
			-e 's/; fi$/\nfi/' \
			-e "/[^a-zA-Z0-9]_$class ./s/\([^a-zA-Z0-9]_$class\) /\1_/g" \
			-e 's/^\(.*\)[ 	]#[^"\\\'']*$/\1/' \
			"$file"
		return
	}

	# idea: joining 'broken' long lines: bla1 \ bla2 \ bla3 (some lines) -> bla1 bla2 bla3 (oneline)
	sed	-e 's/ [ 	]*#[^"]*$//g' \
		-e 's/	[ 	]*#[^"]*$//g' \
		-e '/^#/d' \
		-e '/^	#/d' \
		-e '/^[	]*[^ ]/s/^[	]*//' \
		-e '/^$/d' \
		-e 's/ | /|/g' \
		-e 's/ |$/|/' \
		-e "/_$class ./s/_$class /_${class}_/g" \
		-e 's/; do {/\ndo/' \
		-e 's/} done/done/' \
		-e 's/ ()/()/' \
		-e 's/]; then\(.*\)/]\nthen\1/' \
		-e 's/; fi/\nfi/' \
		-e 's/$([ 	]*/$(/' \
		-e 's/[ 	]*)/)/' \
		-e 's/local [ 	]*/local /' \
		"$file"
}
