#!/bin/sh /etc/rc.common
# Copyright (C) 2015 Patrick Grimm
# modified 2017 by weimarnetz 

START=98
USE_PROCD=1

validate_autoconf_section()
{
	uci_validate_section meshnode settings "${1}" \
		'firstboot:bool'
}


setup_ether() {
	local cfg="$1"
	if [ "$cfg" = "lan" ] ; then
		if ! uci_get meshnode $cfg >/dev/null ; then
			uci_add meshnode ether "$cfg"
		fi
		uci_set meshnode $cfg enabled "1"
		uci_set meshnode $cfg device $cfg
		uci_set meshnode $cfg olsr_mesh "1"
	fi
}

setup_wifi() {
	local cfg="$1"
	#cut radio to get the phy index
	local idx="$(echo $cfg | cut -c 6-)"
	if ! uci_get meshnode $cfg >/dev/null ; then
		uci_add meshnode wifi "$cfg"
	fi
	uci_set meshnode $cfg enabled "1"
	uci_set meshnode $cfg idx $idx
	uci_set meshnode $cfg olsr_mesh "1"
	uci_set meshnode $cfg vap "1"
}


start_autoconf() {
	firstboot=$(uci_get meshnode settings firstboot "0")
	[ "$firstboot" = "0" ] && return
	config_load wireless
	config_foreach setup_wifi wifi-device
	config_load network
	config_foreach setup_ether interface
	# Reset firstboot flag
	uci_set meshnode settings firstboot 0
	uci_commit meshnode
}

reload_service() {
	logger -s -t apply_profile_autoconf "Reload Service"
	start_autoconf
}

service_triggers()
{
	procd_open_trigger
	procd_add_config_trigger "config.change" meshnode /etc/init.d/apply_profile_autoconf reload
	procd_close_trigger

	procd_open_validate
	validate_autoconf_section
	procd_close_validate
}

start_service() {
	logger -s -t apply_profile_autoconf_init "Start Service"
	procd_set_param watch meshnode
	start_autoconf
}
