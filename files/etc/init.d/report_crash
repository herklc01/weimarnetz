#!/bin/sh /etc/rc.common

START=99

uniq_machine_id()
{
	dropbearkey -y -f "/etc/dropbear/dropbear_rsa_host_key" | \
		fgrep "Fingerprint:" | cut -d' ' -f3
}

kernel_version()
{
	uname -a
}

box_hardware()
{
	if [ -e "/etc/HARDWARE" ]; then
		cat "/etc/HARDWARE"
	else
		echo "unknown hardware"
	fi
}

openwrt_revision()
{
	if [ -e "/etc/openwrt_version" ]; then
		cat /etc/openwrt_version
	else
		echo "UNKNOWN REVISION"
	fi
}

build_data()
{
	local file="$1"
	local id="$( uniq_machine_id )"
	local version="$( openwrt_revision )"
	local kernel="$( kernel_version )"
	local hardware="$( box_hardware )"

	echo "crashlog $(cat /proc/sys/kernel/hostname)-$hardware"
	echo "$version"
	echo "$kernel"
	echo "$id"
	echo "$hardware"

	cat "$file"
}

start()
{
	local funcname="crashlog_apport"		# enforce a crash with 'echo c >/proc/sysrq-trigger'
	local file="/sys/kernel/debug/crashlog"		# crashlog.o works since r32788
	local server_addr="weimarnetz.segfault.gq"
	local server_port="2323"
	local answer="false"
	local maxtry=10
	local pause=30

	if [ -e "$file" ]; then
		while [ $maxtry -gt 0 ]; do {
			logger "$funcname: found log in $file, reporting to server $server_ip"
			answer="$( build_data "$file" | nc "$server_addr" "$server_port" )"

			case "$answer" in
				*ok)
					break
				;;
				*)
					maxtry=$(( $maxtry - 1 ))
					logger "$funcname: error during send (answer: '$answer'), trying again in $pause sec"
					sleep $pause
				;;
			esac
		} done

		[ $maxtry -eq 0 ] && {
			cat "$file" >"/www/crashlog.$( cat /proc/uptime ).$$"
		}
	else
		return 0
	fi
}

# vim: set filetype=sh ai noet ts=4 sw=4 sts=4 :
