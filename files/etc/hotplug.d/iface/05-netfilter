#!/bin/sh
# shellcheck disable=SC2039

. /lib/functions.sh
. /lib/functions/network.sh

up_rules() {
	local iface="$1"
	local dev="$2"

	case "$iface" in
		wan)
	    # only allow ssh on wan                                                    
            iptables -A INPUT -i "$dev" -p tcp -m tcp --dport 22 -j ACCEPT             
            iptables -A INPUT -i "$dev" -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT                                                                                  
            iptables -A INPUT -i "$dev" -j REJECT    
			# mss clamping 
			iptables -t mangle -A POSTROUTING -p tcp \
				--tcp-flags SYN,RST SYN -o "$dev" \
				-j TCPMSS --clamp-mss-to-pmtu
			# nat
			iptables -t nat -A POSTROUTING -o "$dev" -j MASQUERADE
			# forbid access to wan subnet (e.g. fritzbox of user)
			[ "$(uci_get ffwizard settings restrict 0)" -eq 1 ] && {
				network_get_subnets wan_subnet	"$iface"
				network_get_subnets6 wan_subnet6 "$iface" 
				[ -n "$wan_subnet" ]  && {
					iptables -N paranoia-local
					iptables -A paranoia-local \
						-s "$wan_subnet" -i "$dev" -j REJECT
					iptables -A FORWARD \
						-j paranoia-local
				}
				[ -n "$wan_subnet6" ] && { 
					ip6tables -N paranoia-local6
					ip6tables -A paranoia-local6 \
						-s "$wan_subnet6" -i "$dev" -j REJECT
					ip6tables -A FORWARD \
						-j paranoia-local6
				} 
			}
			# no internet without vpn
			[ "$(uci_get ffwizard settings paranoia 0)" -eq 1 ] && {
				iptables -N paranoia-vpn
				iptables -A paranoia-vpn -i wlan+ -o "$dev" -j REJECT
				iptables -A paranoia-vpn -i br-vap -o "$dev" -j REJECT
				iptables -A FORWARD -j paranoia-vpn
			}
		;;
		vpn|radio0_mesh|radio1_mesh)
			# mss clamping 
			iptables -t mangle -A POSTROUTING -p tcp \
				--tcp-flags SYN,RST SYN -o "$dev" \
				-j TCPMSS --clamp-mss-to-pmtu
			# nat
			iptables -t nat -N nat-"$iface"
			iptables -t nat -A nat-"$iface" -s 10.63.0.0/16 -j RETURN
			iptables -t nat -A nat-"$iface" -j MASQUERADE
			iptables -t nat -A POSTROUTING -o "$dev" -j nat-"$iface"
		;; 
	esac
}

down_rules() {
	local iface="$1"
	local dev="$2"

	case "$iface" in
		wan)
	    	iptables -D INPUT -i "$dev" -p tcp -m tcp --dport 22 -j ACCEPT             
                iptables -D INPUT -i "$dev" -j REJECT
		iptables -D INPUT -i "$dev" -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT 
			# mss clamping
			iptables -t mangle -D POSTROUTING -p tcp \
				--tcp-flags SYN,RST SYN -o "$dev" \
				-j TCPMSS --clamp-mss-to-pmtu
			# nat
			iptables -t nat -D POSTROUTING -o "$dev" -j MASQUERADE
			# forbid access to wan subnet (e.g. fritzbox of user)
			[ "$(uci_get ffwizard settings restrict 0)" -eq 1 ] && {
				network_get_subnets wan_subnet	"$iface"
				network_get_subnets6 wan_subnet6 "$iface" 
				[ -n "$wan_subnet" ] && {
					iptables -D FORWARD -j paranoia-local
					iptables -F paranoia-local
					iptables -X paranoia-local 
				}
				[ -n "$wan_subnet6" ] && {
					ip6tables -D FORWARD -j paranoia-local6
					ip6tables -F paranoia-local6
					ip6tables -X paranoia-local6
				}
			}
			# no internet without vpn
			[ "$(uci_get ffwizard settings paranoia 0)" -eq 1 ] && {
				iptables -D FORWARD -j paranoia-vpn
				iptables -F paranoia-vpn
				iptables -X paranoia-vpn
			}
		;;
		vpn|radio0_mesh|radio1_mesh)
			# mss clamping
			iptables -t mangle -D POSTROUTING -p tcp \
				--tcp-flags SYN,RST SYN -o "$dev" \
				-j TCPMSS --clamp-mss-to-pmtu
			# nat
			iptables -t nat -D POSTROUTING -o "$dev" -j nat-"$iface"
			iptables -t nat -F nat-"$iface"
			iptables -t nat -X nat-"$iface"
		;;
		
	esac
}

case "$ACTION" in
		ifup)
			up_rules "$INTERFACE" "$DEVICE"
		;;
		ifdown)
			down_rules "$INTERFACE" "$DEVICE"
		;;

esac

# vim: set filetype=sh ai noet ts=4 sw=4 sts=4 :
