#!/bin/sh

# upload
# DEST="bastian@bwireless.mooo.com:.ssh/authorized_keys.$CONFIG_PROFILE.$HOSTNAME.$MODE"
# for MODE in rsa dss; do scp -P 222 .ssh/dropbear_${MODE}_host_key.pub $DEST; done
# on server:
# cat ~/.ssh/authorized_keys.* >~/.ssh/authorized_keys

_ssh_key_public_fingerprint_get()	# output differs, wether its a SHA1 or MD5 hash
{
	local option="$1"		# keywords: 'retry' or 'keyfilename' or <empty>
	local me='ssh_key_public_fingerprint_get'
	local file_openwrt1='/etc/dropbear/dropbear_dss_host_key'	# old
	local file_openwrt2='/etc/dropbear/dropbear_rsa_host_key'	# newer/since r46814
	local file_openwrt3='/etc/dropbear/dropbear_ecdsa_host_key'	# e.g. debian or future TODO: ed25519
	local file_debian='/etc/ssh/ssh_host_rsa_key'
	local nop file

	# TODO: path can be /etc/ssh/... (debian)


	[ "$option" = 'keyfilename' ] && nop=':'

	if   [ -e "$file_openwrt2" ]; then	# try modern first
		file="$file_openwrt2"
		$nop dropbearkey -y -f "$file" | fgrep 'Fingerprint:' | cut -d' ' -f3
	elif [ -e "$file_openwrt1" ]; then
		file="$file_openwrt1"
		$nop dropbearkey -y -f "$file" | fgrep 'Fingerprint:' | cut -d' ' -f3
	elif [ -e "$file_openwrt3" ]; then
		file="$file_openwrt3"
		$nop dropbearkey -y -f "$file" | fgrep 'Fingerprint:' | cut -d' ' -f3
	elif [ -e "$file_debian" ]; then
		# https://bugs.launchpad.net/ubuntu/+source/dropbear/+bug/1009868
		/usr/lib/dropbear/dropbearconvert openssh dropbear "$file_debian" "$file_openwrt2" && {
			_$me 'retry'
			return 0
		}

		file="$file_debian"
		# e.g. SHA256:LliBzdefJ+t2Kczv131e/ae2sIPnAk2giX7zZiZJ8O8
		$nop ssh-keygen -l -f "$file" | cut -d' ' -f2
	else
		[ -z "$option" ] && {
			_ssh sanitize_and_cleanup_keys && _$me 'retry'
		}
	fi

	[ -n "$file" -a "$option" = 'keyfilename' ] && echo "$file"
}

_ssh_start()
{
	/etc/init.d/dropbear start
}

_ssh_stop()
{
	killall dropbear
	sleep 3
	local pid="$( _system get_first_pid dropbear )"
	[ -n "$pid" ] && kill -9 $pid
}

_ssh_regen_keys()
{
	local funcname='ssh_regen_keys'
	local file1='/etc/dropbear/dropbear_dss_host_key'
	local file2='/etc/dropbear/dropbear_rsa_host_key'
	local file3='/etc/dropbear/dropbear_ecdsa_host_key'
	local file

	_log it $funcname daemon info '[START]'

	for file in $file1 $file.pub $file2 $file2.pub $file3 $file3.pub; do {
		[ -e "$file" ] && rm "$file"
	} done

	_ssh start

	[ -e "/tmp/$funcname" ] && rm "/tmp/$funcname"
	while true; do {
		[ -e "$file1" -o -e "$file2" -o -e "$file3" ] && break

		_watch counter "/tmp/$funcname" increment 1 max 100 || return 0
		sleep 1
	} done

	_ssh sanitize_and_cleanup_keys

	_log it $funcname daemon info '[READY]'
}

_ssh_sanitize_and_cleanup_keys()
{
	local funcname='ssh_sanitize_and_cleanup_keys'
	local file mode keyok

	public_keyfile_ok()
	{
		local file="$1"

		[ -e '/usr/bin/dropbearkey' ] || return 0		# simulate OK
		[ -e "$file.pub" ] || return 1
		[ $( _file size "$file.pub" ) -eq 0 ] && return 1

		return 0
	}

	keyok=
	for mode in rsa dss ecdsa; do {
		file="/etc/dropbear/dropbear_${mode}_host_key"
		if [ -e "$file" ]; then
			keyok='true'
		else
			[ -z "$keyok" ] && {
				dropbearkey -t "$mode" -f "/etc/dropbear/dropbear_${mode}_host_key" && {
					keyok='true'
				}
			}
		fi

		public_keyfile_ok "$file" || {
			_log it $funcname daemon info "writing $file.pub"

			dropbearkey -y -f "$file" | grep ^'ssh-' >"$file.pub"
			chmod 0600 "$file.pub"
		}
	} done

	[ -h "$HOME/.ssh" ] || ln -fs '/etc/dropbear' "$HOME/.ssh"
}
