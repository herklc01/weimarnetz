#!/bin/sh 

# uci helper functions from override_uci_vars


_uci_already_added()
{
	local config="$1"	# e.g. network
	local section="$2"	# e.g. alias
	local item="$3"		# e.g. ipaddr or 'interface'
	local wish="$4"		# e.g. 10.10.43.33 or 'lan'
	local value i=0

	while value="$( uci -q get $config.@$section[$i].$item )"; do {
		if [ "$wish" = "$value" ]; then
			return 0
		else
			i=$(( i + 1 ))
		fi
	} done

	return 1
}

_uci_config_add_alias()
{
	local network="$1"		# e.g. 'lan'
	local ip_and_mask="$2"		# e.g. '10.20.30.9/24'
	local gateway="$3"		# e.g. '10.20.30.1' or <empty>
	local ip mask

	ip="${ip_and_mask%/*}"
	mask="${ip_and_mask#*/}"
	mask="$( _net cidr2mask "$mask" )"

	_uci already_added 'network' 'alias' 'interface' "$network" || {
		uci add network alias >/dev/null
		uci set network.@alias[-1].interface="$network"
		uci set network.@alias[-1].proto='static'
		uci set network.@alias[-1].ipaddr="$ip"
		uci set network.@alias[-1].netmask="$mask"
		[ -n "$gateway" ] && uci set network.@alias[-1].gateway="$gateway"
	}
}

_uci_remove_section()
{
	local check_var="$1"	# e.g. network.@alias[].interface
	local check_value="$2"	# e.g. loopback
	local p1="$( echo "$check_var" | cut -d'[' -f1 )"
	local p2="$( echo "$check_var" | cut -d']' -f2 )"

	local i
	for i in $( seq 15 -1 0 ); do {
		while [ "$( uci -q get "${p1}[$i]${p2}" )" = "$check_value" ]; do {
			uci delete "${p1}[$i]"
		} done
	} done
}

