#!/bin/sh

PERMLOG='/www/everlasting_syslog.txt'

_log_shell_is_interactive()
{
	case "$PS1" in
		*'@'*)
			# definition in interactive /etc/profile does not have it
		;;
		*)
			return 1
		;;
	esac
}

_log_it()		# CALL: _log it my_function_name daemon info "mytext"
{
	local FATHER_PROCESS="$0"
	local FUNCTION="$1"		# name of function, from where call was invoked
	local FACILITY="$2"		# source = kern,user,mail,daemon,syslog,lpr,news,uucp,cron,authpriv,local0-7
	local PRIO="$3"			# emerg,alert,crit,err,warning,notice,info,debug
	local MESSAGE="$4"		# humanreadable verbose message, all is syslog-alike
	local PERMLOG_RAM="$TMPDIR/everlasting_syslog.txt"
	local MEM UPTIME DATE i list message_to_send username password dest text ARCHIV_NODE_MESSAGE UNIXTIME

	[ -z "$MESSAGE" ] && {		# from stdin (pipe into function)
		while read -r -t 3 MESSAGE; do {
			_log it "$FUNCTION" "$FACILITY" "$PRIO" "STDIN${i}: ${MESSAGE:-stdin_was_empty}"
			i=$(( ${i:-1} + 1 ))
		} done

		return 0
	}

	mem_uptime_and_date()
	{
		[ -z "$MEM" -o -z "$UPTIME" -o -z "$DATE" ] && {
			_system ram_free	MEM=
			_system uptime sec	UPTIME=
			_system date evalable	DATE=
		}
	}

	case "$PRIO" in
		debug|emerg|alert|crit)
			eval $( mem_uptime_and_date )

			[ "$PRIO" != 'debug' ] && {
				text="$DATE ' [up ${UPTIME}s $MEM bytes free] $FATHER_PROCESS [${FACILITY}.${PRIO}] ${FUNCTION}() $MESSAGE"

				if [ $( _system flash_free ) -gt 150 ]; then
					# write to logfile in flash, which is not lost after reboot
					echo >>$PERMLOG "$text"
				else
					echo >>$PERMLOG_RAM "$text"
				fi

				MESSAGE="$( _sanitizer run "$MESSAGE" strip_newlines )"
				UNIXTIME="$( _system date unixtime )"
				ARCHIV_NODE_MESSAGE="$text"
				echo >>"$TMPDIR/ARCHIV_MONITORING" "log=$( _sanitizer run "$ARCHIV_NODE_MESSAGE" shellsafe urlvalue )&time=${UNIXTIME}"
				touch "$TMPDIR/SEND_ALIVE_FAILED"
			}
		;;
	esac

	_log shell_is_interactive && {
		eval $( mem_uptime_and_date )

		# output to STDERR
		echo 1>&2 "$DATE ' [up ${UPTIME}s $MEM bytes free] $FATHER_PROCESS [${FACILITY}.${PRIO}] ${FUNCTION}() $MESSAGE"
	}

	logger -t "kalua: $FATHER_PROCESS" -p "${FACILITY}.${PRIO}" -- "$FUNCTION() $MESSAGE"
}

# vim: set filetype=sh ai noet ts=4 sw=4 sts=4 :
