#!/bin/sh

_file_time()
{
	local file="$1"
	local option="$2"	# unixstamp|humanreadable

	if [ -e "$file" ]; then
		case "$option" in
			'unix'*)
				date +%s -r "$file"
			;;
			'human'*)
				_system date unixtime2date "$( date +%s -r "$file" )"
			;;
		esac
	else
		echo '0'
	fi
}

_file_age()
{
	local file="$1"
	local option="$2"		# e.g. 'sec' or '-gt' (greater than)
	local option_args="$3"		# e.g. 3600
	local unixtime unixtime_file age uptime

	unixtime_file=$( _file time "$file" unixstamp )

	# year 1970? -> better use bootup-uptime
	[ $unixtime_file -lt 86400 ] && {
		uptime="$( _system uptime sec )"
		unixtime="$( _system date unixtime )"
		unixtime_file=$(( unixtime - uptime ))
	}

	age=$(( $( _system date unixtime ) - unixtime_file ))	# [seconds]

	case "$option" in
		humanreadable)
			_stopwatch seconds2humanreadable "$age"
		;;
		humanreadable_verbose)
			if [ $age -gt 1800 ]; then
				echo "$( _stopwatch seconds2humanreadable "$age" ) @ $( _system date unixtime2date "$unixtime_file" )"
			else
				_stopwatch seconds2humanreadable "$age"
			fi
		;;
		'-'*)
			# -gt 3600
			test "$age" $option $option_args
		;;
		sec|*)
			echo "$age"
		;;
	esac
}

_file_size()			# FIXME! use 'stat -c%s $file' if possible (not included in default OpenWrt)
{				# or portable 'du -k $file'
	local file="$1"
	local unit="$2"		# 'bytes'(default) or 'kb'
	local size

	# scraping 'ls -la' is dirty, but much faster than 'wc -c <$file'
	#
	# root@box:~ ls -l /etc/init.d/myfile
	# -rwxr-xr-x	1 1000	   1000			   0 Jan  3 16:50 /etc/init.d/myfile

	set -- $( ls -la "$file" 2>/dev/null || echo O O O O x O )
	size="$5"

	[ "$size" = 'x' ] && return 1	# file does not exist

	case "$unit" in
		kb)
			size=$(( size / 1024 ))
		;;
	esac

	echo "$size"
}

# vim: set filetype=sh ai noet ts=4 sw=4 sts=4 :
